install the loki operator from the instruction "https://docs.redhat.com/en/documentation/openshift_container_platform/4.10/html/logging/cluster-logging-loki"
Create a Secret from below command that uses the access_key_id and access_key_secret fields to specify our  Hitachi credentials and bucketnames, endpoint  to define the object storage location.
=========================================================
#oc create secret generic logging-loki-s3 \
  --from-literal=bucketnames="dr-retail-prod" \
  --from-literal=endpoint="https://dr-pnbone-prod-retail.hcpdc.obc.co.in" \
  --from-literal=access_key_id="Y25pcHJvZA==" \
  --from-literal=access_key_secret="bf76b39fa86b91c2ba4d2fe64d9e1c0d"
========================================
Create the LokiStack custom resource (CR):
==================================================
apiVersion: loki.grafana.com/v1
kind: LokiStack
metadata:
  name: logging-loki
  namespace: openshift-logging
spec:
  limits:
   global: 
      retention: 
        days: 30
  replicationFactor: 1
  size: 1x.medium
  storage:
    schemas:
    - effectiveDate: "2025-09-09"
      version: v13
    secret:
      name: logging-loki-s3
      type: s3
	tls:
	  caName: hitachi-s3-root-ca.crt
	  caKey: service-ca.crt
  storageClassName: sc-hitachi-csi
  tenants:
    mode: openshift-logging
	=============================================================
after that created one configMap to support tls handshake
==============================================================
kind: ConfigMap
apiVersion: v1
metadata:
  name: hitachi-s3-root-ca.crt
  namespace: openshift-logging
data:
  service-ca.crt: |
	-----BEGIN CERTIFICATE-----
    MIIDdzCCAl+gAwIBAgIQYR3f5SX1Rq1OqnWCoIRQ9jANBgkqhkiG9w0BAQsFADBC
    MRMwEQYKCZImiZPyLGQBGRYDbmV0MRMwEQYKCZImiZPyLGQBGRYDcG5iMRYwFAYD
    VQQDEw1QTkIgUk9PVCBDQS0yMB4XDTE5MTIwNjA1NTY1MFoXDTM5MTIwNjA2MDY0
    OVowQjETMBEGCgmSJomT8ixkARkWA25ldDETMBEGCgmSJomT8ixkARkWA3BuYjEW
    MBQGA1UEAxMNUE5CIFJPT1QgQ0EtMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
    AQoCggEBAMJJ0bpn53KRLIqXCmiNMx5N+gOzHZBsw7lsuE0bYKEdw4TrJkCRp3xi
    eWrAyL4hGF+c+kkmobcOlkocCZXmsLCAYzNubWWkwzB2HphbZaUQBzARjq3QXIIs
    HgXLI3oXKK3bEhwvvYJbkBjd6UfkZMmo3HvbYKTjTzfI7wuORVrV2oOB/8TovnXo
    cshnWFA4AA+fdqXM96i4HUTX233BY92BplXY63g9iND8CMSFgCQwqxI2sKk05nXc
    9/zDI2NHAK7K3AamlLUHFCrvHqFHTm5xmINobWRwvMqdp9+bvNwKbKVgjOgfMdzS
    /oJ3PFSL3EnP60GeK+GocaDGsxl+a7MCAwEAAaNpMGcwEwYJKwYBBAGCNxQCBAYe
    BABDAEEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
    FLu4HSoZt26irPDJxa+vUHeIlYwkMBAGCSsGAQQBgjcVAQQDAgEAMA0GCSqGSIb3
    DQEBCwUAA4IBAQCpSZVqyUUjM13OBrHn+x9sPrP7bJI66F41I9EGjSb3EmDmIRUc
    h9u/0GX4qrjO3pWo5KM+dxpEI0hHocQ1zzJHwHt8yqhkN1rDDpoo3TtGkL/iklre
    QK9gBZReMem9W5N3KbiMG5dUjVnOiv3yH3WD4qk3PKafcJi4NzpkngtOPELuWqtH
    qyIPQbABjELHTw4kPaO+qoVrpfqfAqnWnc2IgW2p7ioGs7iLIa42HpZZ9UvYcB0M
    IZdpJFCROR/DFsrNFl86y3JmVWKqxdbhKduuxGl1UsLmnazP+5NgAZfR7PHkt5be
    rdT6opvvn/Ox8Dv+7ujRTrabPNOBS2XzEnWk
    -----END CERTIFICATE-----
========================================================================
